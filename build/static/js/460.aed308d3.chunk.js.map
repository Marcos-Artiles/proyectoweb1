{"version":3,"file":"static/js/460.aed308d3.chunk.js","mappings":"4KAGA,MA2GA,EA3G+BA,KAC7B,MAOMC,EAAeA,KACnB,MAAMC,EAAcC,SAASC,eAAe,cAAmCC,MACzEC,EAAYH,SAASC,eAAe,YAAiCC,MACrEE,EAAmBJ,SAASC,eAAe,mBAAwCC,MACnFG,EAAaL,SAASC,eAAe,aAAkCC,MAG7E,MAFoB,gEAEHI,KAAKP,GAIlBI,IAAaC,GACfG,MAAM,qCACC,IAELC,EAAsBH,KACxBE,MAAM,0FACC,IATPA,MAAM,yDACC,EAWE,EAGPC,EAAyBH,GACZI,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAChDC,MAAMC,GAAgCA,EAAKT,YAAcA,IAGrEU,EAAkBA,KACtB,MAKMC,EAAU,CACdC,OANcjB,SAASC,eAAe,UAA+BC,MAOrEC,SANgBH,SAASC,eAAe,YAAiCC,MAOzEG,UANiBL,SAASC,eAAe,aAAkCC,MAO3EH,WANkBC,SAASC,eAAe,cAAmCC,OAS/E,IAAIgB,EAAWT,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAC9DM,EAASC,KAAKH,GAEd,MAAMI,EAAeX,KAAKY,UAAUH,GACpCP,aAAaW,QAAQ,WAAYF,GAEhCpB,SAASC,eAAe,eAA+BsB,MAAMC,QAAU,QACvExB,SAASC,eAAe,oBAAwCwB,OAAO,EAG1E,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAiBF,UACjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcF,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KAAGE,KAAK,IAAGH,SAAC,oBAKtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,qBAAoBF,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBAEJF,EAAAA,EAAAA,MAAA,QAAMM,GAAG,mBAAmBC,SAvEZC,IACpBA,EAAMC,iBACFrC,KACFiB,GACF,EAmEuDa,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,iBAAiBM,QAAQ,SAAQR,SAAC,aACnDC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,sBAAsBO,KAAK,OAAOL,GAAG,SAASM,KAAK,SAASC,UAAQ,QAEvFb,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,iBAAiBM,QAAQ,WAAUR,SAAC,oBACrDC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0BAA0BO,KAAK,WAAWL,GAAG,WAAWM,KAAK,WAAWC,UAAQ,QAEnGb,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,iBAAiBM,QAAQ,kBAAiBR,SAAC,8BAC5DC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0BAA0BO,KAAK,WAAWL,GAAG,kBAAkBM,KAAK,kBAAkBC,UAAQ,QAEjHb,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,iBAAiBM,QAAQ,YAAWR,SAAC,mBACtDC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,sBAAsBO,KAAK,OAAOL,GAAG,YAAYM,KAAK,YAAYC,UAAQ,QAE7Fb,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,iBAAiBM,QAAQ,aAAYR,SAAC,sBACvDC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,sBAAsBO,KAAK,OAAOL,GAAG,aAAaM,KAAK,aAAaC,UAAQ,QAE/FV,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBO,KAAK,SAAQT,SAAC,iBAClDC,EAAAA,EAAAA,KAAA,KAAGG,GAAG,cAAcF,UAAU,uBAAuBP,MAAO,CAAEC,QAAS,QAASI,SAAC,6CAMrFC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAiBF,UACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yDAEJ,C","sources":["components/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport './RegisterPage.css'; // Importa el archivo de estilos CSS local\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault(); // Evitar que el formulario se envíe automáticamente\r\n    if (validateForm()) {\r\n      saveDataLocally();\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const colorCarro = (document.getElementById('colorCarro') as HTMLInputElement).value;\r\n    const password = (document.getElementById('password') as HTMLInputElement).value;\r\n    const confirmPassword = (document.getElementById('confirmPassword') as HTMLInputElement).value;\r\n    const matricula = (document.getElementById('matricula') as HTMLInputElement).value;\r\n    const lettersOnly = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/;\r\n\r\n    if (!lettersOnly.test(colorCarro)) {\r\n      alert(\"El campo Color del Carro solo puede contener letras.\");\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      alert(\"Las contraseñas no coinciden.\");\r\n      return false;\r\n    }\r\n    if (isMatriculaDuplicated(matricula)) {\r\n      alert(\"La matrícula ya está registrada. Por favor, ingrese una matrícula diferente.\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const isMatriculaDuplicated = (matricula: string) => {\r\n    const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\r\n    return usuarios.some((user: { matricula: string }) => user.matricula === matricula);\r\n  };\r\n\r\n  const saveDataLocally = () => {\r\n    const correo = (document.getElementById('correo') as HTMLInputElement).value;\r\n    const password = (document.getElementById('password') as HTMLInputElement).value;\r\n    const matricula = (document.getElementById('matricula') as HTMLInputElement).value;\r\n    const colorCarro = (document.getElementById('colorCarro') as HTMLInputElement).value;\r\n\r\n    const usuario = {\r\n      correo: correo,\r\n      password: password,\r\n      matricula: matricula,\r\n      colorCarro: colorCarro,\r\n    };\r\n\r\n    let usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\r\n    usuarios.push(usuario);\r\n\r\n    const usuariosJSON = JSON.stringify(usuarios);\r\n    localStorage.setItem('usuarios', usuariosJSON);\r\n\r\n    (document.getElementById('success-msg') as HTMLElement).style.display = 'block';\r\n    (document.getElementById('registrationForm') as HTMLFormElement).reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"register-header\">\r\n        <nav className=\"register-nav\">\r\n          <ul>\r\n            <li><a href=\"/\">Inicio</a></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n\r\n      <div className=\"register-container\">\r\n        <h2>Registro de Usuario</h2>\r\n\r\n        <form id=\"registrationForm\" onSubmit={handleSubmit}>\r\n          <div className=\"register-form-group\">\r\n            <label className=\"register-label\" htmlFor=\"correo\">Correo:</label>\r\n            <input className=\"register-input-text\" type=\"text\" id=\"correo\" name=\"correo\" required />\r\n          </div>\r\n          <div className=\"register-form-group\">\r\n            <label className=\"register-label\" htmlFor=\"password\">Contraseña:</label>\r\n            <input className=\"register-input-password\" type=\"password\" id=\"password\" name=\"password\" required />\r\n          </div>\r\n          <div className=\"register-form-group\">\r\n            <label className=\"register-label\" htmlFor=\"confirmPassword\">Confirmar Contraseña:</label>\r\n            <input className=\"register-input-password\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required />\r\n          </div>\r\n          <div className=\"register-form-group\">\r\n            <label className=\"register-label\" htmlFor=\"matricula\">Matrícula:</label>\r\n            <input className=\"register-input-text\" type=\"text\" id=\"matricula\" name=\"matricula\" required />\r\n          </div>\r\n          <div className=\"register-form-group\">\r\n            <label className=\"register-label\" htmlFor=\"colorCarro\">Color del Carro:</label>\r\n            <input className=\"register-input-text\" type=\"text\" id=\"colorCarro\" name=\"colorCarro\" required />\r\n          </div>\r\n          <button className=\"register-button\" type=\"submit\">Registrarse</button>\r\n          <p id=\"success-msg\" className=\"register-success-msg\" style={{ display: 'none' }}>\r\n            Registro exitoso. ¡Bienvenido!\r\n          </p>\r\n        </form>\r\n      </div>\r\n\r\n      <footer className=\"register-footer\">\r\n        <p>© 2024 Marcos. Todos los derechos reservados.</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["RegisterPage","validateForm","colorCarro","document","getElementById","value","password","confirmPassword","matricula","test","alert","isMatriculaDuplicated","JSON","parse","localStorage","getItem","some","user","saveDataLocally","usuario","correo","usuarios","push","usuariosJSON","stringify","setItem","style","display","reset","_jsxs","_Fragment","children","_jsx","className","href","id","onSubmit","event","preventDefault","htmlFor","type","name","required"],"sourceRoot":""}