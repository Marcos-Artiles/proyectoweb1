{"version":3,"file":"static/js/485.f314fe29.chunk.js","mappings":"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","sources":["components/UserProfile/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './UserProfile.css'; // Importa el archivo de estilos CSS local\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserProfile: React.FC = () => {\r\n  const [correo, setCorreo] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n  const [matricula, setMatricula] = useState<string>('');\r\n  const [colorCarro, setColorCarro] = useState<string>('');\r\n  const [plazaAsignada, setPlazaAsignada] = useState<string>(''); // Estado para la plaza asignada\r\n  const [userIndex, setUserIndex] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    const currentUser: any = JSON.parse(localStorage.getItem('currentUser') || '{}');\r\n    if (currentUser) {\r\n      setCorreo(currentUser.correo);\r\n      setPassword(currentUser.password);\r\n      setConfirmPassword(currentUser.password);\r\n      setMatricula(currentUser.matricula);\r\n      setColorCarro(currentUser.colorCarro);\r\n\r\n      const usuarios: any[] = JSON.parse(localStorage.getItem('usuarios') || '[]');\r\n      const index: number = usuarios.findIndex(user => user.correo === currentUser.correo);\r\n      setUserIndex(index);\r\n\r\n      // Obtener la plaza asignada del usuario actual\r\n      setPlazaAsignada(currentUser.plaza || ''); // Asigna la plaza, si está definida\r\n    } else {\r\n      console.error(\"No se encontró currentUser en el localStorage\");\r\n    }\r\n  }, []);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault(); // Evitar que el formulario se envíe automáticamente\r\n    if (validateForm()) {\r\n      updateUserData();\r\n    }\r\n  };\r\n\r\n  // Validar el formulario antes de enviar\r\n  const validateForm = (): boolean => {\r\n    const lettersOnly: RegExp = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/;\r\n\r\n    if (!lettersOnly.test(colorCarro)) {\r\n      alert(\"El campo Color del Carro solo puede contener letras.\");\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      alert(\"Las contraseñas no coinciden.\");\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  // Actualizar los datos del usuario en localStorage\r\n  const updateUserData = () => {\r\n    const usuarios: any[] = JSON.parse(localStorage.getItem('usuarios') || '[]');\r\n\r\n    if (userIndex !== null && userIndex !== -1) {\r\n      usuarios[userIndex] = {\r\n        correo: correo,\r\n        password: password,\r\n        matricula: matricula,\r\n        colorCarro: colorCarro,\r\n        plaza: plazaAsignada // Actualiza la plaza asignada\r\n      };\r\n\r\n      localStorage.setItem('usuarios', JSON.stringify(usuarios));\r\n      localStorage.setItem('currentUser', JSON.stringify(usuarios[userIndex]));\r\n\r\n      alert(\"Datos actualizados con éxito.\");\r\n    } else {\r\n      console.error(\"Error al encontrar el usuario en la lista de usuarios.\");\r\n    }\r\n  };\r\n\r\n  // Aquí defines plazasDisponibles como una lista de ejemplo\r\n  const plazasDisponibles: string[] = [\"A-1\", \"B-2\", \"C-8\"];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"perfil-container\">\r\n        <header>\r\n          <nav>\r\n            <ul>\r\n              <li><a href=\"/\">Inicio</a></li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n\r\n        <h2>Perfil de Usuario</h2>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"correo\">Correo:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"correo\"\r\n              name=\"correo\"\r\n              value={correo}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Contraseña:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">Confirmar Contraseña:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"matricula\">Matrícula:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"matricula\"\r\n              name=\"matricula\"\r\n              value={matricula}\r\n              onChange={(e) => setMatricula(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"colorCarro\">Color del Carro:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"colorCarro\"\r\n              name=\"colorCarro\"\r\n              value={colorCarro}\r\n              onChange={(e) => setColorCarro(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Actualizar Datos</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"additional-info\">\r\n        <div>\r\n          <h3>Plaza Asignada:</h3>\r\n          <p>{plazaAsignada}</p> {/* Mostrar la plaza asignada */}\r\n        </div>\r\n        <div>\r\n          <button><Link to=\"/SoportePage\">Soporte</Link></button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Nuevo div para mostrar las plazas disponibles */}\r\n      <div className=\"plazas-disponibles\">\r\n        <h2>Plazas Disponibles</h2>\r\n        <ul>\r\n          {/* Aquí puedes mapear las plazas disponibles */}\r\n          {plazasDisponibles.map((plaza, index) => (\r\n            <li key={index}>{plaza}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <footer>\r\n        <p>© 2024 Marcos. Todos los derechos reservados.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"names":["UserProfile","correo","setCorreo","useState","password","setPassword","confirmPassword","setConfirmPassword","matricula","setMatricula","colorCarro","setColorCarro","plazaAsignada","setPlazaAsignada","userIndex","setUserIndex","useEffect","currentUser","JSON","parse","localStorage","getItem","index","findIndex","user","plaza","console","error","validateForm","test","alert","updateUserData","usuarios","setItem","stringify","_jsxs","children","className","_jsx","href","onSubmit","event","preventDefault","htmlFor","type","id","name","value","readOnly","onChange","e","target","required","Link","to","map"],"sourceRoot":""}